{"version":3,"sources":["Epinfo.js","App.js","index.js"],"names":["onClipCopy","text","result","alert","Epinfo","ep","titleString","title","replace","trim","forEach","word","imgSrc","small_screenshot","infoString","indexOf","megaSizeString","Math","floor","size_bytes","toFixed","relDate","Date","date_released_unix","relDateString","getFullYear","getMonth","toString","getDate","className","src","alt","season","episode","filename","href","magnet_url","onCopy","torrent_url","App","state","eplist","page","limit","DataCnt","torrents_count","hasMore","getEpList","a","axios","get","data","torrents","setState","this","dataLength","next","loader","map","index","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.926cf465.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction onClipCopy(text, result) {\r\n  if (result) {\r\n    alert(\"정보가 클립보드에 복사되었습니다.\");\r\n  } else {\r\n    alert(\r\n      \"클립보드에 복사하는데 실패했습니다.\\n보안상 지원하지 않거나 호환되지 않는 기능입니다.\\n아이콘의 링크 정보를 수동으로 복사해주시기 바랍니다.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction Epinfo({ ep }) {\r\n  const killWord = [\r\n    \"720p\",\r\n    \"1080p\",\r\n    \"AMZN\",\r\n    \"WEB=DL\",\r\n    \"DDP5\",\r\n    \"1 H\",\r\n    \"264-NTb\",\r\n    \"EZTV\",\r\n    \"0 H\",\r\n    \"x264\",\r\n    \"-ViSUM\",\r\n    \"-mSD\",\r\n    \"-BTW\",\r\n    \"HDTV\",\r\n    \"-MiNX\",\r\n    \"x265\",\r\n    \"WEB-DL\",\r\n    \"-PHOENiX\",\r\n    \"iP\",\r\n    \"AAC2\",\r\n    \"h264\",\r\n    \"264\",\r\n    \"-MTB\",\r\n    \"-BRISK\",\r\n    \"WEBRip\",\r\n    \"1 x\",\r\n    \"480p\",\r\n    \"-FoV\",\r\n    \"Av\",\r\n    \"Kolos\",\r\n    \"-KETTLE\",\r\n    \"XviD\",\r\n    \"-AFG\",\r\n    \"WEB\",\r\n    \"-RiVER\",\r\n    \"-TBS\",\r\n    \"-CREED\",\r\n    \"-MORiTZ\",\r\n    \"PROPER\",\r\n    \"-TLA\",\r\n    \"-SERIOUSLY\",\r\n    \"-TASTETV\",\r\n    \"RERIP\"\r\n  ];\r\n\r\n  const imgRoot = \"https://eztv.io/ezimg/thumbs/\";\r\n\r\n  var titleString = ep.title\r\n    .replace(/Doctor Who 2005 S\\d+E\\d+/g, \"\", \"\")\r\n    .trim();\r\n\r\n  killWord.forEach(word => {\r\n    titleString = titleString.replace(word, \"\");\r\n  });\r\n\r\n  titleString = titleString.trim();\r\n  if (titleString === \"\") titleString = ep.title;\r\n\r\n  var imgSrc = imgRoot + ep.small_screenshot.replace(\"//ezimg.ch/thumbs/\", \"\");\r\n\r\n  var infoString = \"\";\r\n  if (ep.title.indexOf(\"720p\") > 0) {\r\n    infoString = \"720p\";\r\n  } else if (ep.title.indexOf(\"1080p\") > 0) {\r\n    infoString = \"1080p\";\r\n  } else {\r\n    infoString = \"\";\r\n  }\r\n\r\n  var megaSizeString =\r\n    Math.floor(ep.size_bytes / 1024 / 1024) > 1000\r\n      ? Math.floor(ep.size_bytes / 1024 / 1024 / 1024).toFixed(1) + \"G\"\r\n      : Math.floor(ep.size_bytes / 1024 / 1024) + \"M\";\r\n\r\n  var relDate = new Date(ep.date_released_unix * 1000);\r\n  var relDateString =\r\n    relDate.getFullYear() +\r\n    \"-\" +\r\n    (relDate.getMonth() + 1 > 10\r\n      ? (relDate.getMonth() + 1).toString()\r\n      : \"0\" + (relDate.getMonth() + 1)) +\r\n    \"-\" +\r\n    (relDate.getDate() > 10\r\n      ? relDate.getDate().toString()\r\n      : \"0\" + relDate.getDate().toString());\r\n  return (\r\n    <div className=\"epInfo\">\r\n      <img\r\n        src={imgSrc}\r\n        alt={titleString}\r\n        title={titleString}\r\n        className=\"epInfo__poster\"\r\n      />\r\n      <div className=\"epInfo__container\">\r\n        <div className=\"epInfo__title\">\r\n          {titleString}\r\n          <span className=\"epInfo__infoText epInfo__epNumber\">\r\n            {ep.season}시즌 {ep.episode}화 {infoString}\r\n          </span>\r\n        </div>\r\n        <div className=\"epInfo__infoText\">파일명 : {ep.filename}</div>\r\n        <div className=\"epInfo__infoText\">용량 : {megaSizeString}</div>\r\n        <div className=\"epInfo__infoText\">업로드 일자 : {relDateString}</div>\r\n        <div className=\"epInfo__link\">\r\n          <div className=\"epInfo_linkarea\">\r\n            <a\r\n              href={ep.magnet_url}\r\n              className=\"epInfo__magnet\"\r\n              alt=\"마그넷 링크\"\r\n              title=\"마그넷 링크\"\r\n            >\r\n              <button>마그넷 링크 다운</button>\r\n            </a>\r\n            <CopyToClipboard text={ep.magnet_url} onCopy={onClipCopy}>\r\n              <button>마그넷 링크 복사</button>\r\n            </CopyToClipboard>\r\n          </div>\r\n          <div className=\"epInfo_linkarea\">\r\n            <a\r\n              href={ep.torrent_url}\r\n              className=\"epInfo__download\"\r\n              alt=\"토렌트 파일 링크\"\r\n              title=\"토렌트 파일 링크\"\r\n            >\r\n              <button>토렌트 파일 링크</button>\r\n            </a>\r\n            <CopyToClipboard text={ep.torrent_url} onCopy={onClipCopy}>\r\n              <button>토렌트 링크 복사</button>\r\n            </CopyToClipboard>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Epinfo;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"./Epinfo\";\nimport \"./App.css\";\nimport Epinfo from \"./Epinfo\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass App extends React.Component {\n  state = {\n    eplist: [],\n    page: 1,\n    limit: 30,\n    DataCnt: 30,\n    torrents_count: 0,\n    hasMore: true\n  };\n\n  componentDidMount() {\n    this.getEpList();\n  }\n\n  getEpList = async () => {\n    const {\n      data: { torrents, torrents_count }\n    } = await axios.get(\n      `https://eztv.io/api/get-torrents?imdb_id=0436992&page=${this.state.page}`\n    );\n\n    var hasMore = true;\n    if (torrents_count < this.state.limit * this.state.page) hasMore = false;\n\n    this.setState({\n      eplist: [...this.state.eplist, ...torrents],\n      torrents_count,\n      DataCnt: this.state.limit * this.state.page,\n      page: this.state.page + 1,\n      hasMore\n    });\n  };\n\n  render() {\n    const { eplist, DataCnt, hasMore } = this.state;\n    // console.log(\"Total Cnt : \" + torrents_count);\n    return (\n      <InfiniteScroll\n        className=\"container\"\n        dataLength={DataCnt}\n        next={this.getEpList}\n        hasMore={hasMore}\n        loader={\n          <div className=\"loader\">\n            <span className=\"loader__text\">자료를 가져오고 있습니다...</span>\n          </div>\n        }\n      >\n        {/* <div>전체 파일 수 : {torrents_count}</div> */}\n        {eplist.map((ep, index) => (\n          <Epinfo key={index} ep={ep}></Epinfo>\n        ))}\n      </InfiniteScroll>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}